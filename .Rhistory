attave_plotM
attave_plotM <- plot_ly(data = everyMonthavg,
x = everyMonthavg$monthseq,
y = everyMonthavg[[27]],
type = "scatter",
mode = "lines",
name =names(everyMonthavg[27]))
attave_plotM <- plot_ly(data = everyMonthavg,
x = everyMonthavg$monthseq,
y = everyMonthavg[[27]],
type = "scatter",
mode = "lines",
name =names(everyMonthavg[27]))
for(i in 2:26){
attave_plotM <-  add_lines(attave_plotM,
x = everyMonthavg$monthseq,
y = everyMonthavg[[i]],
type = "scatter",
mode = "lines",
name =names(everyMonthavg[i]))
}
attave_plotM
attave_plotM <- plot_ly(data = everyMonthavg,
x = everyMonthavg$monthseq,
y = everyMonthavg[[27]],
type = "scatter",
mode = "lines",
name =names(everyMonthavg[27]))
#attave_plotM
for(i in 26:2){
attave_plotM <-  add_lines(attave_plotM,
x = everyMonthavg$monthseq,
y = everyMonthavg[[i]],
type = "scatter",
mode = "lines",
name =names(everyMonthavg[i]))
}
attave_plotM
attave_plotM <- plot_ly(data = everyMonthavg,
x = everyMonthavg$monthseq,
y = everyMonthavg[[27]],
type = "scatter",
mode = "lines",
name =names(everyMonthavg[27]))
#attave_plotM
for(i in 27:2){
attave_plotM <-  add_lines(attave_plotM,
x = everyMonthavg$monthseq,
y = everyMonthavg[[i]],
type = "scatter",
mode = "lines",
name =names(everyMonthavg[i]))
}
attave_plotM
View(everyMonthavg)
attave_plotM <- plot_ly(data = everyMonthavg,
x = everyMonthavg$monthseq,
y = everyMonthavg[[28]],
type = "scatter",
mode = "lines",
name =names(everyMonthavg[28]))
#attave_plotM
for(i in 27:2){
attave_plotM <-  add_lines(attave_plotM,
x = everyMonthavg$monthseq,
y = everyMonthavg[[i]],
type = "scatter",
mode = "lines",
name =names(everyMonthavg[i]))
}
attave_plotM
View(cpble)
View(everyMonthavg)
View(CPBL)
View(CPBL)
field_CPBL <- read.csv("data/field.csv")
View(field_CPBL)
View(field_CPBL)
View(yavg)
View(ATTaverage)
View(CPBL)
View(everyMonthavg)
summary(CPBL$field)
a <- summary(CPBL$field)
fieldName <- names(summary(CPBL$field))
View(field_CPBL)
fieldName
replace(CPBL$field, "高縣", replace= "澄清湖")
replace(CPBL$field, "高縣"= "澄清湖")
sub("高縣", replacement = "澄清湖", CPBL$field)
fieldName <- names(summary(CPBL$field))
fieldName
fieldName <- names(sub("高縣", replacement = "澄清湖", CPBL$field))
fieldName <- names(summary(sub("高縣", replacement = "澄清湖", CPBL$field)))
fieldName <- names(summary(CPBL$field))
fieldSelect <- subset(CPBL, CPBL$field ==fieldName[1])
View(fieldSelect)
meanforfield <- mean(fieldSelect$att)
meanforfield
meanforonefield <- mean(fieldSelect$att)
meanforEveryField <- c()
meanforEveryField <- c()
for (i in 1:length(fieldName)){
fieldSelect <- subset(CPBL, CPBL$field ==fieldName[i])
meanforonefield <- mean(fieldSelect$att)
meanforEveryField <- c(meanforEveryField, meanforonefield)
}
meanforEveryField
averageATTfor_Field <- data.frame(fieldName, meanforEveryField)
View(averageATTfor_Field)
plotforAVGfield <- plot_ly(data = averageATTfor_Field,
x = averageATTfor_Field$fieldName,
y = averageATTfor_Field$meanforEveryField,
type = "bar")
plotforAVGfield
View(CPBL)
View(CPBL)
Field <- sub("高縣", replacement = "澄清湖", "宜蘭", replacement = "羅東", CPBL$field)
field <- sub("高縣", replacement = "澄清湖", CPBL$field)
field <- sub("宜蘭", replacement = "羅東", CPBL$field)
field <- sub("宜蘭", replacement = "羅東", field)
summary(field)
summary(field)
summary(field)
summary(CPBL$field)
field <- sub("嘉市", replacement = "嘉義市", field)
field <- sub("嘉義", replacement = "嘉義市", field)
View(CPBL)
Field <- sub("高縣", replacement = "澄清湖", CPBL$field)
Field <- sub("宜蘭", replacement = "羅東", Field)
Field <- sub("嘉市", replacement = "嘉義市", Field)
Field <- sub("嘉義", replacement = "嘉義市", Field)
CPBL <- data.frame(time = CPBL$time, att=CPBL$att, field=Field, Home_Team=CPBL$Home_team, Visit_team=CPBL$Visit_team )
View(CPBL)
summary(CPBL$field)
View(CPBL)
Field <- sub('嘉義', replacement = "嘉義市", Field)
CPBL <- data.frame(time = CPBL$time, att=CPBL$att, field=Field, Home_Team=CPBL$Home_team, Visit_team=CPBL$Visit_team )
Field <- sub("高縣", replacement = "澄清湖", CPBL$field)
Field <- sub("宜蘭", replacement = "羅東", Field)
Field <- sub("嘉市", replacement = "嘉義市", Field)
Field <- sub('嘉義', replacement = "嘉義市", Field)
CPBL <- data.frame(time = CPBL$time, att=CPBL$att, field=Field, Home_Team=CPBL$Home_team, Visit_team=CPBL$Visit_team )
setwd('c:/R_Application/cpblatt')
Sys.setlocale(category = "LC_ALL", locale = "cht")
CPBL <- read.csv('data/CPBL.csv')
field_CPBL <- read.csv("data/field.csv")
CPBL <-CPBL[-1]
all_cpbl <- plot_ly(data = CPBL,
x = CPBL$time,
y = CPBL$att,
type = "scatter",
mode = "markers")
all_cpbl
# Every Year
year <- format(as.Date(CPBL$time), "%Y")
month <- format(as.Date(CPBL$time), "%m")
CPBL <- cbind(CPBL, year, month)
yearseq <- as.vector(as.factor(1990:2016))
averageATT <- c()
for(i in 1:length(yearseq)){
yavg <- subset(CPBL, CPBL$year==yearseq[i])
meanatt_year <- mean(yavg$att)
averageATT <- c(averageATT, meanatt_year)
}
ATTaverage <- data.frame(year = yearseq, attAVG = averageATT)
attave_plot <- plot_ly(data = ATTaverage,
x = ATTaverage$year,
y = ATTaverage$attAVG,
type = "bar")
attave_plot
monthseq <-c('04', '05', '06', '07', '08', '09', '10')
everyMonthavg <- data.frame(monthseq)
for(i in 1:length(yearseq)){
yavg <- subset(CPBL, CPBL$year==yearseq[i])
monthavg <- c()
for(i in 1:length(monthseq)){
monavg <- subset(yavg, yavg$month==monthseq[i])
meanatt_month <- mean(monavg$att)
monthavg<-c(monthavg, meanatt_month)
}
everyMonthavg <- cbind(everyMonthavg, monthavg)
}
names(everyMonthavg)[2:ncol(everyMonthavg)] <- yearseq
View(CPBL)
attave_plotM <- plot_ly(data = everyMonthavg,
x = everyMonthavg$monthseq,
y = everyMonthavg[[28]],
type = "scatter",
mode = "lines",
name =names(everyMonthavg[28]))
#attave_plotM
for(i in 27:2){
attave_plotM <-  add_lines(attave_plotM,
x = everyMonthavg$monthseq,
y = everyMonthavg[[i]],
type = "scatter",
mode = "lines",
name =names(everyMonthavg[i]))
}
attave_plotM
fieldName <- names(summary(CPBL$field))
meanforEveryField <- c()
for (i in 1:length(fieldName)){
fieldSelect <- subset(CPBL, CPBL$field ==fieldName[i])
meanforonefield <- mean(fieldSelect$att)
meanforEveryField <- c(meanforEveryField, meanforonefield)
}
averageATTfor_Field <- data.frame(fieldName, meanforEveryField)
plotforAVGfield <- plot_ly(data = averageATTfor_Field,
x = averageATTfor_Field$fieldName,
y = averageATTfor_Field$meanforEveryField,
type = "bar")
plotforAVGfield
setwd('c:/R_Application/cpblatt')
Sys.setlocale(category = "LC_ALL", locale = "cht")
CPBL <- read.csv('data/CPBL.csv')
field_CPBL <- read.csv("data/field.csv")
CPBL <-CPBL[-1]
all_cpbl <- plot_ly(data = CPBL,
x = CPBL$time,
y = CPBL$att,
type = "scatter",
mode = "markers")
all_cpbl
# Every Year
year <- format(as.Date(CPBL$time), "%Y")
month <- format(as.Date(CPBL$time), "%m")
CPBL <- cbind(CPBL, year, month)
yearseq <- as.vector(as.factor(1990:2016))
averageATT <- c()
for(i in 1:length(yearseq)){
yavg <- subset(CPBL, CPBL$year==yearseq[i])
meanatt_year <- mean(yavg$att)
averageATT <- c(averageATT, meanatt_year)
}
ATTaverage <- data.frame(year = yearseq, attAVG = averageATT)
attave_plot <- plot_ly(data = ATTaverage,
x = ATTaverage$year,
y = ATTaverage$attAVG,
type = "bar")
attave_plot
monthseq <-c('04', '05', '06', '07', '08', '09', '10')
everyMonthavg <- data.frame(monthseq)
for(i in 1:length(yearseq)){
yavg <- subset(CPBL, CPBL$year==yearseq[i])
monthavg <- c()
for(i in 1:length(monthseq)){
monavg <- subset(yavg, yavg$month==monthseq[i])
meanatt_month <- mean(monavg$att)
monthavg<-c(monthavg, meanatt_month)
}
everyMonthavg <- cbind(everyMonthavg, monthavg)
}
names(everyMonthavg)[2:ncol(everyMonthavg)] <- yearseq
# everyMonthavg = 每年4~10月的觀眾數月平均
attave_plotM <- plot_ly(data = everyMonthavg,
x = everyMonthavg$monthseq,
y = everyMonthavg[[28]],
type = "scatter",
mode = "lines",
name =names(everyMonthavg[28]))
#attave_plotM
for(i in 27:2){
attave_plotM <-  add_lines(attave_plotM,
x = everyMonthavg$monthseq,
y = everyMonthavg[[i]],
type = "scatter",
mode = "lines",
name =names(everyMonthavg[i]))
}
attave_plotM
fieldName <- names(summary(CPBL$field))
meanforEveryField <- c()
for (i in 1:length(fieldName)){
fieldSelect <- subset(CPBL, CPBL$field ==fieldName[i])
meanforonefield <- mean(fieldSelect$att)
meanforEveryField <- c(meanforEveryField, meanforonefield)
}
averageATTfor_Field <- data.frame(fieldName, meanforEveryField)
plotforAVGfield <- plot_ly(data = averageATTfor_Field,
x = averageATTfor_Field$fieldName,
y = averageATTfor_Field$meanforEveryField,
type = "bar")
plotforAVGfield
View(averageATTfor_Field)
View(field_CPBL)
percentForField <- subset(averageATTfor_Field, averageATTfor_Field$fieldName ==field_CPBL$field)
percentForField <- subset(averageATTfor_Field, averageATTfor_Field$fieldName ==field_CPBL$field[1])
percentForField <- subset(averageATTfor_Field, averageATTfor_Field$fieldName ==field_CPBL$field[[1]])
field_CPBL$field[[1]]
percentForField <- subset(averageATTfor_Field, averageATTfor_Field$fieldName == field_CPBL$field[[1]])
fieldname <- field_CPBL$field
fieldname <- c(field_CPBL$field)
fieldname <- as.vector(field_CPBL$field)
percentForField <- subset(averageATTfor_Field, averageATTfor_Field$fieldName == fieldname[[1]])
View(percentForField)
fieldatt <- subset(field_CPBL, field_CPBL$field ==fieldname[[1]])
View(fieldatt)
attRatio <- (percentForField$meanforEveryField/fieldatt$座位數)*100
as.numeric(percentForField$meanforEveryField)
as.numeric(fieldatt$座位數)
View(fieldatt)
as.numeric(fieldatt$座位數)
as.numeric(as.vector(fieldatt$座位數))
fieldatt$座位數
as.fector(fieldatt$座位數)
as.factor(fieldatt$座位數)
as.numeric(as.factor(fieldatt$座位數))
as.numeric(as.factor(fieldatt$座位數[1]))
as.numeric(as.factor(fieldatt$座位數[[1]]))
as.numeric(as.vector(as.factor(fieldatt$座位數[[1]])))
as.vector(as.factor(fieldatt$座位數[[1]]))
as.numeric(as.vector(as.factor(fieldatt$座位數[[1]])))
as.numeric(as.vector(fieldatt$座位數[[1]]))
fieldatt$座位數
a <- fieldatt$座位數
a
as.vector(a)
b <- as.vector(a)
b
as.numeric(b)
is.numeric(field_CPBL$座位數)
as.numeric(field_CPBL$座位數)
field_CPBL <- read.csv("data/field.csv")
fieldatt <- subset(field_CPBL, field_CPBL$field ==fieldname[[1]])
field_CPBL$座位數
is.numeric(field_CPBL$座位數)
fieldname <- as.vector(field_CPBL$field)
percentForField <- subset(averageATTfor_Field, averageATTfor_Field$fieldName == fieldname[[1]])
fieldatt <- subset(field_CPBL, field_CPBL$field ==fieldname[[1]])
attRatio <-
fieldName <- names(summary(CPBL$field))
attRatio <- percentForField$meanforEveryField / fieldatt$座位數
attRatio
attRatio <- (percentForField$meanforEveryField / fieldatt$座位數)*100
attRatio
fieldName
fieldname[[1]]
fieldName <- names(summary(CPBL$field))
fieldname[1]
fieldname <- as.vector(field_CPBL$field)
fieldname
fieldName
fieldname <- as.vector(field_CPBL$field)
percentATT <- c()
for(i in 1:length(fieldname)){
percentForField <- subset(averageATTfor_Field, averageATTfor_Field$fieldName == fieldname[[i]])
fieldatt <- subset(field_CPBL, field_CPBL$field ==fieldname[[i]])
attRatio <- (percentForField$meanforEveryField / fieldatt$座位數)*100
percentATT <-c(percentATT, attRatio)
}
ATTPerecntperfield <- data.frame(fieldname, percentATT)
length(fieldname)
for(i in 1:length(fieldname)){
percentForField <- subset(averageATTfor_Field, averageATTfor_Field$fieldName == fieldname[[i]])
fieldatt <- subset(field_CPBL, field_CPBL$field ==fieldname[[i]])
attRatio <- (percentForField$meanforEveryField / fieldatt$座位數)*100
percentATT <-c(percentATT, attRatio)
}
percentATT <- c()
for(i in 1:length(fieldname)){
percentForField <- subset(averageATTfor_Field, averageATTfor_Field$fieldName == fieldname[[i]])
fieldatt <- subset(field_CPBL, field_CPBL$field ==fieldname[[i]])
attRatio <- (percentForField$meanforEveryField / fieldatt$座位數)*100
percentATT <-c(percentATT, attRatio)
}
View(percentForField)
fieldname[18]
attRatio
percentATT
percentForField <- subset(averageATTfor_Field, averageATTfor_Field$fieldName == fieldname[[2]])
fieldatt <- subset(field_CPBL, field_CPBL$field ==fieldname[[2]])
attRatio <- (percentForField$meanforEveryField / fieldatt$座位數)*100
attRatio
fieldname[[11]]
percentForField <- subset(averageATTfor_Field, averageATTfor_Field$fieldName == fieldname[[11]])
fieldatt <- subset(field_CPBL, field_CPBL$field ==fieldname[11])
attRatio <- (percentForField$meanforEveryField / fieldatt$座位數)*100
attRatio
fieldatt <- subset(field_CPBL, field_CPBL$field ==fieldname[[11]])
View(fieldatt)
attRatio <- (percentForField$meanforEveryField / fieldatt$座位數)*100
attRatio
percentForField$meanforEveryField
View(percentForField)
View(field_CPBL)
field_CPBL <- read.csv("data/field.csv")
fieldname <- as.vector(field_CPBL$field)
percentATT <- c()
for(i in 1:length(fieldname)){
percentForField <- subset(averageATTfor_Field, averageATTfor_Field$fieldName == fieldname[[11]])
fieldatt <- subset(field_CPBL, field_CPBL$field ==fieldname[[11]])
attRatio <- (percentForField$meanforEveryField / fieldatt$座位數)*100
percentATT <-c(percentATT, attRatio)
}
ATTPerecntperfield <- data.frame(fieldname, percentATT)
View(ATTPerecntperfield)
fieldname <- as.vector(field_CPBL$field)
percentATT <- c()
for(i in 1:length(fieldname)){
percentForField <- subset(averageATTfor_Field, averageATTfor_Field$fieldName == fieldname[[i]])
fieldatt <- subset(field_CPBL, field_CPBL$field ==fieldname[[i]])
attRatio <- (percentForField$meanforEveryField / fieldatt$座位數)*100
percentATT <-c(percentATT, attRatio)
}
ATTPerecntperfield <- data.frame(fieldname, percentATT)
View(ATTPerecntperfield)
field_CPBL <- read.csv("data/field.csv")
fieldname <- as.vector(field_CPBL$field)
percentATT <- c()
for(i in 1:length(fieldname)){
percentForField <- subset(averageATTfor_Field, averageATTfor_Field$fieldName == fieldname[[i]])
fieldatt <- subset(field_CPBL, field_CPBL$field ==fieldname[[i]])
attRatio <- (percentForField$meanforEveryField / fieldatt$座位數)*100
percentATT <-c(percentATT, attRatio)
}
ATTPerecntperfield <- data.frame(fieldname, percentATT)
View(percentForField)
View(ATTPerecntperfield)
View(ATTaverage)
View(averageATTfor_Field)
View(field_CPBL)
anova(ATTPerecntperfield$percentATT)
TemptoRn_plot
setwd('c:/R_Application/Rn_data')
Sys.setlocale(category = "LC_ALL", locale = "cht")
# Read Data from CSV file
rawData <- read.csv("data/rndata.csv")
# Select Rn Data
RnTimeToCONC <- data.frame(
time = as.POSIXct(rawData$time, "%Y/%m/%d %H:%M", tz = "GMT"),
Rn = as.numeric(rawData$Radon)
)
# Select Rainfall Data
rainfall <- data.frame(
time = as.POSIXct(subset(rawData, rawData$c0U600hourly.rf >= 0)[[20]],
"%Y/%m/%d %H:%M",
tz = "GMT"),
rf = as.numeric(subset(rawData, rawData$c0U600hourly.rf >= 0)[[21]])
)
# draw simple figure compare with Rn data and Rainfall data
Rn_plot <- plot_ly(data = RnTimeToCONC,
x = RnTimeToCONC$time,
y = RnTimeToCONC$Rn,
type = "scatter",
mode = "lines")
RF_plot <- plot_ly(data = rainfall,
x = rainfall$time,
y = rainfall$rf,
type = "bar",
color = "red")
Rn_compare_RF_plot <- subplot(Rn_plot, RF_plot, nrows = 2, shareX = TRUE)
# get every hour Rn average
format_RnTTime <- format(RnTimeToCONC$time, format = "%Y-%m-%d %H")
RnTimeToCONC <- cbind(RnTimeToCONC, FormatTime = format_RnTTime)
dateCat <- names(summary(RnTimeToCONC$FormatTime, maxsum=length(RnTimeToCONC$FormatTime)))
Rn_mean <- c()
for(i in 1:length(dateCat)){
subDate <- subset(RnTimeToCONC, RnTimeToCONC$FormatTime == dateCat[[i]])
Rn_mean <- c(Rn_mean, mean(subDate$Rn))
}
averagePerHour <- data.frame(time=as.POSIXct(dateCat, "%Y-%m-%d %H", tz="GMT"), Rn_mean)
# Merge with Rn and Rainfall data
newRainfalltoRn <- merge(averagePerHour, rainfall, by='time')
norfRn <- subset(newRainfalltoRn, newRainfalltoRn$rf >= 0) # Select rf >20 mm
# Plot Rn data compare Rainfall data
RFtoRn_plot <- plot_ly(data = norfRn,
x = ~norfRn$rf,
y = ~norfRn$Rn_mean,
type = "scatter",
mode = "markers")
RFtoRn_plot
# Merge with Temperture data
Temp <- data.frame(
time = as.POSIXct(subset(rawData, as.numeric(as.vector(rawData$air.Temp.)) >= 0)[[20]],
"%Y/%m/%d %H:%M",
tz = "GMT"),
tem = 10*as.numeric(as.vector((subset(rawData, as.numeric(as.vector(rawData$air.Temp.)) >= 0)[[23]])))
)
newTemptoRn <- merge(averagePerHour, Temp, by='time')
deleteErorrTem <- subset(newTemptoRn, newTemptoRn$tem <= 40)
# plot
TemptoRn_plot <- plot_ly(data = deleteErorrTem,
x = ~deleteErorrTem$tem,
y = ~deleteErorrTem$Rn_mean,
type = "scatter",
mode = "markers")
TemptoRn_plot
RFtoRn_plot <- plot_ly(data = norfRn,
#x = ~norfRn$rf,
x = ~norfRn$Rn_mean,
type = "scatter",
mode = "markers")
RFtoRn_plot
View(norfRn)
RFtoRn_plot <- plot_ly(data = norfRn,
#x = ~norfRn$rf,
y = ~norfRn$Rn_mean,
type = "scatter",
mode = "markers")
RFtoRn_plot
setwd("C:/Taiwan-CWB-Data")
runApp("TaiwanCWB")
setwd("C:/Taiwan-CWB-Data")
runApp("TaiwanCWB")
runApp("TaiwanCWB")
runApp("TaiwanCWB")
runApp("TaiwanCWB")
runApp("TaiwanCWB")
runApp("TaiwanCWB")
runApp("TaiwanCWB")
