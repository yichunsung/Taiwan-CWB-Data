pic_date <- c(download_str)
url_pic <-paste("http://www.cwb.gov.tw/V7/observe/rainfall/Data/hk", pic_date, "000.jpg", sep = "")
destfile_pic <- paste("~/Documents/github_rep/Taiwan-CWB-Data/", yesterday, ".jpg", sep = "")
for(i in 1:length(pic_date)){
download.file(url_pic[i], destfile_pic[i], mode="wb")
}
souce("downloadCWBData.R")
source("downloadCWBData.R")
download_cwb_data("竹子湖", "2018-01-02", "2018-01-05", "~/Documents/123.csv")
Sys.setlocale(category = "LC_ALL", locale = "")
testREAD <- read.csv("https://docs.google.com/spreadsheets/d/e/2PACX-1vRPbYgyxZkrAj5Xd_Jy2m0lBzSrfOLUOqvX2OC3RzyT6mUu3KB73SJBq9UoNELTn2L_Myd3gQptCeyH/pub?gid=179807401&single=true&output=csv")
View(testREAD)
stationList <- read.csv("data/newList.csv")
View(stationList)
setwd("~")
# Library Packages
library(magrittr)
library(httr)
library(rvest)
library(stringr)
library(reshape2)
library(knitr)
#setwd('~/Documents/Github_rep/Taiwan-CWB-Data')
Sys.setlocale(category = "LC_ALL", locale = "")
getDataformCWB <- function(station, timerange1, timerange2, iterm){
# ---------- input Targat Station ---------- #
# Load Station List
#stationList <- read.csv("data/newList.csv")
testREAD <- read.csv("https://docs.google.com/spreadsheets/d/e/2PACX-1vRPbYgyxZkrAj5Xd_Jy2m0lBzSrfOLUOqvX2OC3RzyT6mUu3KB73SJBq9UoNELTn2L_Myd3gQptCeyH/pub?gid=179807401&single=true&output=csv")
inputStationName <- c(station) # "Location"
# ---------- input Date ---------- #
fromdate <- as.Date(timerange1) # "2017-01-06"
todate <- as.Date(timerange2) # "2017-01-06"
date <- seq.Date(fromdate, todate, "day")
lengthDate <- as.numeric(length(date))
lengthDatep <- as.numeric(lengthDate+1)
# ---------- URL ---------- #
url_1 <- "http://e-service.cwb.gov.tw/HistoryDataQuery/DayDataController.do?command=viewMain&station="
url_2 <- "&stname=%25E7%25AB%25B9%25E6%259D%25B1&datepicker="
url_1_1 <- paste(url_1, stationList$id, sep = "")
url_all <- paste(url_1_1, url_2, sep = "")
stationListnew <- cbind(stationList, url_all)
substation <- data.frame(subset(stationListnew, stationListnew$Name == inputStationName))
subdataframe <-data.frame(date=date, urldate = paste(substation$url_all, date ,sep=""))
# ---------- Xpath ---------- #
inputxpathName <- c(iterm) # "ex: press"
# Rain
xpathrain <- "//table[@id='MyTable']/tbody/tr/td[11]" # Xpath for rain data
# Hum
xpathHum <- "//table[@id='MyTable']/tbody/tr/td[6]" # Xpath for RH data
# Tem
xpathTtem <- "//table[@id='MyTable']/tbody/tr/td[4]" # Xpath for Temperature data
# Press
xpathPres <- "//table[@id='MyTable']/tbody/tr/td[2]" # Xpath for StnPres data
XpathName <- c("Rain", "Hum", "Tem", "Press")
xpathurl <- c(xpathrain, xpathHum, xpathTtem, xpathPres)
xpathList <- data.frame(XpathName, xpathurl)
xpathselect_dataframe <- subset(xpathList, xpathList$XpathName == inputxpathName)
xpathSelect_result <- as.vector(xpathselect_dataframe$xpathurl)
#-----
hr24 <- data.frame(Hour=1:24) # set one day time
for (i in 1:lengthDate){
urlhtml <- as.vector(subdataframe$urldate[i])# as.vector(date_dataFrame$urldate[1])
# doc <- read_html(urls)
datadoc <-read_html(urlhtml)# read_html(as.vector(date_dataFrame$urldate[1]))
data <- datadoc %>%
html_nodes(., xpath = xpathSelect_result)%>%
html_text
if(is.na(data[1]) == TRUE){
data <- rep(NA, 24)
}
data_renew <- str_trim(sub("<U+00A0>",replacement ="",data)) # Delete something we don't need
hr24 <-cbind(hr24, data_renew)
}
names(hr24)[2:lengthDatep] <- as.vector(as.factor(date))
hr24_all <- melt(hr24, id=c("Hour") ) # Let them for one column
names(hr24_all) <- c("hour", "date", "data")
POStime <- as.POSIXct(paste(hr24_all$date, hr24_all$hour, sep = " "), "%Y-%m-%d %H", tz="GMT")
resultTable <- data.frame(time=POStime, data= hr24_all$data)
names(resultTable)[2] <-c(iterm)
return(resultTable)
}
getDataformCWB_ENG <- function(station, timerange1, timerange2, iterm){
# ---------- input Targat Station ---------- #
# Load Station List
stationList <- read.csv("data/new_Station_List.csv")
inputStationName <- c(station) # "Location"
# ---------- input Date ---------- #
fromdate <- as.Date(timerange1) # "2017-01-06"
todate <- as.Date(timerange2) # "2017-01-06"
date <- seq.Date(fromdate, todate, "day")
lengthDate <- as.numeric(length(date))
lengthDatep <- as.numeric(lengthDate+1)
# ---------- URL ---------- #
url_1 <- "http://e-service.cwb.gov.tw/HistoryDataQuery/DayDataController.do?command=viewMain&station="
url_2 <- "&stname=%25E7%25AB%25B9%25E6%259D%25B1&datepicker="
url_1_1 <- paste(url_1, stationList$id, sep = "")
url_all <- paste(url_1_1, url_2, sep = "")
stationListnew <- cbind(stationList, url_all)
substation <- data.frame(subset(stationListnew, stationListnew$engName == inputStationName))
subdataframe <-data.frame(date=date, urldate = paste(substation$url_all, date ,sep=""))
# ---------- Xpath ---------- #
inputxpathName <- c(iterm) # "ex: press"
# Rain
xpathrain <- "//table[@id='MyTable']/tbody/tr/td[11]" # Xpath for rain data
# Hum
xpathHum <- "//table[@id='MyTable']/tbody/tr/td[6]" # Xpath for RH data
# Tem
xpathTtem <- "//table[@id='MyTable']/tbody/tr/td[4]" # Xpath for Temperature data
# Press
xpathPres <- "//table[@id='MyTable']/tbody/tr/td[2]" # Xpath for StnPres data
XpathName <- c("Rain", "Hum", "Tem", "Press")
xpathurl <- c(xpathrain, xpathHum, xpathTtem, xpathPres)
xpathList <- data.frame(XpathName, xpathurl)
xpathselect_dataframe <- subset(xpathList, xpathList$XpathName == inputxpathName)
xpathSelect_result <- as.vector(xpathselect_dataframe$xpathurl)
#-----
hr24 <- data.frame(Hour=1:24) # set one day time
for (i in 1:lengthDate){
urlhtml <- as.vector(subdataframe$urldate[i])# as.vector(date_dataFrame$urldate[1])
# doc <- read_html(urls)
datadoc <-read_html(urlhtml)# read_html(as.vector(date_dataFrame$urldate[1]))
data <- datadoc %>%
html_nodes(., xpath = xpathSelect_result)%>%
html_text
if(is.na(data[1]) == TRUE){
data <- rep(NA, 24)
}
data_renew <- str_trim(sub("<U+00A0>",replacement ="",data)) # Delete something we don't need
hr24 <-cbind(hr24, data_renew)
}
names(hr24)[2:lengthDatep] <- as.vector(as.factor(date))
hr24_all <- melt(hr24, id=c("Hour") ) # Let them for one column
names(hr24_all) <- c("hour", "date", "data")
POStime <- as.POSIXct(paste(hr24_all$date, hr24_all$hour, sep = " "), "%Y-%m-%d %H", tz="GMT")
resultTable <- data.frame(time=POStime, data= hr24_all$data)
names(resultTable)[2] <-c(iterm)
return(resultTable)
}
StationAllTable <- function(station, StartDate, EndDate){
station_Press <- getDataformCWB(station, StartDate, EndDate, "Press")
station_Hum <- getDataformCWB(station, StartDate, EndDate, "Hum")
station_Tem <- getDataformCWB(station, StartDate, EndDate, "Tem")
station_Rain <- getDataformCWB(station, StartDate, EndDate, "Rain")
Starion_All <- data.frame(time=station_Press[[1]],
rf = station_Rain[[2]],
Press = station_Press[[2]],
temperture = station_Tem[[2]],
Hum = station_Hum[[2]])
return(Starion_All)
}
StationAllTable_engName <- function(station, StartDate, EndDate){
station_Press <- getDataformCWB_ENG(station, StartDate, EndDate, "Press")
station_Hum <- getDataformCWB_ENG(station, StartDate, EndDate, "Hum")
station_Tem <- getDataformCWB_ENG(station, StartDate, EndDate, "Tem")
station_Rain <- getDataformCWB_ENG(station, StartDate, EndDate, "Rain")
Starion_All <- data.frame(time=station_Press[[1]],
rf = station_Rain[[2]],
Press = station_Press[[2]],
temperture = station_Tem[[2]],
Hum = station_Hum[[2]])
return(Starion_All)
}
download_cwb_data <- function(stationName, startDate, EndDate, path){
StationAllTable(stationName, startDate, EndDate) %>% write.csv(., path)
}
download_cwb_data("竹東", "2018-01-01", "2018-01-02", "~/Documents/g.csv")
stationList <- read.csv("https://docs.google.com/spreadsheets/d/e/2PACX-1vRPbYgyxZkrAj5Xd_Jy2m0lBzSrfOLUOqvX2OC3RzyT6mUu3KB73SJBq9UoNELTn2L_Myd3gQptCeyH/pub?gid=179807401&single=true&output=csv")
View(stationList)
stationList$Name[1]
Sys.Date()
new_df <- data.frame()
for(i in 1 : 3){ #nrow(stationList)){
data1 <-  StationAllTable(stationList$Name[i], Sys.Date()-1, Sys.Date()-1)
new_df <- rbind(new_df, data1)
}
# Library Packages
library(magrittr)
library(httr)
library(rvest)
library(stringr)
library(reshape2)
library(knitr)
# Library Packages
library(magrittr)
library(httr)
library(rvest)
library(stringr)
library(reshape2)
library(knitr)
#setwd('~/Documents/Github_rep/Taiwan-CWB-Data')
Sys.setlocale(category = "LC_ALL", locale = "")
getDataformCWB <- function(station, timerange1, timerange2, iterm){
# ---------- input Targat Station ---------- #
# Load Station List
#stationList <- read.csv("data/newList.csv")
stationList <- read.csv("https://docs.google.com/spreadsheets/d/e/2PACX-1vRPbYgyxZkrAj5Xd_Jy2m0lBzSrfOLUOqvX2OC3RzyT6mUu3KB73SJBq9UoNELTn2L_Myd3gQptCeyH/pub?gid=179807401&single=true&output=csv")
inputStationName <- c(station) # "Location"
# ---------- input Date ---------- #
fromdate <- as.Date(timerange1) # "2017-01-06"
todate <- as.Date(timerange2) # "2017-01-06"
date <- seq.Date(fromdate, todate, "day")
lengthDate <- as.numeric(length(date))
lengthDatep <- as.numeric(lengthDate+1)
# ---------- URL ---------- #
url_1 <- "http://e-service.cwb.gov.tw/HistoryDataQuery/DayDataController.do?command=viewMain&station="
url_2 <- "&stname=%25E7%25AB%25B9%25E6%259D%25B1&datepicker="
url_1_1 <- paste(url_1, stationList$id, sep = "")
url_all <- paste(url_1_1, url_2, sep = "")
stationListnew <- cbind(stationList, url_all)
substation <- data.frame(subset(stationListnew, stationListnew$Name == inputStationName))
subdataframe <-data.frame(date=date, urldate = paste(substation$url_all, date ,sep=""))
# ---------- Xpath ---------- #
inputxpathName <- c(iterm) # "ex: press"
# Rain
xpathrain <- "//table[@id='MyTable']/tbody/tr/td[11]" # Xpath for rain data
# Hum
xpathHum <- "//table[@id='MyTable']/tbody/tr/td[6]" # Xpath for RH data
# Tem
xpathTtem <- "//table[@id='MyTable']/tbody/tr/td[4]" # Xpath for Temperature data
# Press
xpathPres <- "//table[@id='MyTable']/tbody/tr/td[2]" # Xpath for StnPres data
XpathName <- c("Rain", "Hum", "Tem", "Press")
xpathurl <- c(xpathrain, xpathHum, xpathTtem, xpathPres)
xpathList <- data.frame(XpathName, xpathurl)
xpathselect_dataframe <- subset(xpathList, xpathList$XpathName == inputxpathName)
xpathSelect_result <- as.vector(xpathselect_dataframe$xpathurl)
#-----
hr24 <- data.frame(Hour=1:24) # set one day time
for (i in 1:lengthDate){
urlhtml <- as.vector(subdataframe$urldate[i])# as.vector(date_dataFrame$urldate[1])
# doc <- read_html(urls)
datadoc <-read_html(urlhtml)# read_html(as.vector(date_dataFrame$urldate[1]))
data <- datadoc %>%
html_nodes(., xpath = xpathSelect_result)%>%
html_text
if(is.na(data[1]) == TRUE){
data <- rep(NA, 24)
}
data_renew <- str_trim(sub("<U+00A0>",replacement ="",data)) # Delete something we don't need
hr24 <-cbind(hr24, data_renew)
}
names(hr24)[2:lengthDatep] <- as.vector(as.factor(date))
hr24_all <- melt(hr24, id=c("Hour") ) # Let them for one column
names(hr24_all) <- c("hour", "date", "data")
POStime <- as.POSIXct(paste(hr24_all$date, hr24_all$hour, sep = " "), "%Y-%m-%d %H", tz="GMT")
resultTable <- data.frame(time=POStime, data= hr24_all$data)
names(resultTable)[2] <-c(iterm)
return(resultTable)
}
getDataformCWB_ENG <- function(station, timerange1, timerange2, iterm){
# ---------- input Targat Station ---------- #
# Load Station List
stationList <- read.csv("data/new_Station_List.csv")
inputStationName <- c(station) # "Location"
# ---------- input Date ---------- #
fromdate <- as.Date(timerange1) # "2017-01-06"
todate <- as.Date(timerange2) # "2017-01-06"
date <- seq.Date(fromdate, todate, "day")
lengthDate <- as.numeric(length(date))
lengthDatep <- as.numeric(lengthDate+1)
# ---------- URL ---------- #
url_1 <- "http://e-service.cwb.gov.tw/HistoryDataQuery/DayDataController.do?command=viewMain&station="
url_2 <- "&stname=%25E7%25AB%25B9%25E6%259D%25B1&datepicker="
url_1_1 <- paste(url_1, stationList$id, sep = "")
url_all <- paste(url_1_1, url_2, sep = "")
stationListnew <- cbind(stationList, url_all)
substation <- data.frame(subset(stationListnew, stationListnew$engName == inputStationName))
subdataframe <-data.frame(date=date, urldate = paste(substation$url_all, date ,sep=""))
# ---------- Xpath ---------- #
inputxpathName <- c(iterm) # "ex: press"
# Rain
xpathrain <- "//table[@id='MyTable']/tbody/tr/td[11]" # Xpath for rain data
# Hum
xpathHum <- "//table[@id='MyTable']/tbody/tr/td[6]" # Xpath for RH data
# Tem
xpathTtem <- "//table[@id='MyTable']/tbody/tr/td[4]" # Xpath for Temperature data
# Press
xpathPres <- "//table[@id='MyTable']/tbody/tr/td[2]" # Xpath for StnPres data
XpathName <- c("Rain", "Hum", "Tem", "Press")
xpathurl <- c(xpathrain, xpathHum, xpathTtem, xpathPres)
xpathList <- data.frame(XpathName, xpathurl)
xpathselect_dataframe <- subset(xpathList, xpathList$XpathName == inputxpathName)
xpathSelect_result <- as.vector(xpathselect_dataframe$xpathurl)
#-----
hr24 <- data.frame(Hour=1:24) # set one day time
for (i in 1:lengthDate){
urlhtml <- as.vector(subdataframe$urldate[i])# as.vector(date_dataFrame$urldate[1])
# doc <- read_html(urls)
datadoc <-read_html(urlhtml)# read_html(as.vector(date_dataFrame$urldate[1]))
data <- datadoc %>%
html_nodes(., xpath = xpathSelect_result)%>%
html_text
if(is.na(data[1]) == TRUE){
data <- rep(NA, 24)
}
data_renew <- str_trim(sub("<U+00A0>",replacement ="",data)) # Delete something we don't need
hr24 <-cbind(hr24, data_renew)
}
names(hr24)[2:lengthDatep] <- as.vector(as.factor(date))
hr24_all <- melt(hr24, id=c("Hour") ) # Let them for one column
names(hr24_all) <- c("hour", "date", "data")
POStime <- as.POSIXct(paste(hr24_all$date, hr24_all$hour, sep = " "), "%Y-%m-%d %H", tz="GMT")
resultTable <- data.frame(time=POStime, data= hr24_all$data)
names(resultTable)[2] <-c(iterm)
return(resultTable)
}
StationAllTable <- function(station, StartDate, EndDate){
station_Press <- getDataformCWB(station, StartDate, EndDate, "Press")
station_Hum <- getDataformCWB(station, StartDate, EndDate, "Hum")
station_Tem <- getDataformCWB(station, StartDate, EndDate, "Tem")
station_Rain <- getDataformCWB(station, StartDate, EndDate, "Rain")
Starion_All <- data.frame(time=station_Press[[1]],
rf = station_Rain[[2]],
Press = station_Press[[2]],
temperture = station_Tem[[2]],
Hum = station_Hum[[2]])
return(Starion_All)
}
StationAllTable_engName <- function(station, StartDate, EndDate){
station_Press <- getDataformCWB_ENG(station, StartDate, EndDate, "Press")
station_Hum <- getDataformCWB_ENG(station, StartDate, EndDate, "Hum")
station_Tem <- getDataformCWB_ENG(station, StartDate, EndDate, "Tem")
station_Rain <- getDataformCWB_ENG(station, StartDate, EndDate, "Rain")
Starion_All <- data.frame(time=station_Press[[1]],
rf = station_Rain[[2]],
Press = station_Press[[2]],
temperture = station_Tem[[2]],
Hum = station_Hum[[2]])
return(Starion_All)
}
download_cwb_data <- function(stationName, startDate, EndDate, path){
StationAllTable(stationName, startDate, EndDate) %>% write.csv(., path)
}
stationList <- read.csv("https://docs.google.com/spreadsheets/d/e/2PACX-1vRPbYgyxZkrAj5Xd_Jy2m0lBzSrfOLUOqvX2OC3RzyT6mUu3KB73SJBq9UoNELTn2L_Myd3gQptCeyH/pub?gid=179807401&single=true&output=csv")
new_df <- data.frame()
for(i in 1 : 3){ #nrow(stationList)){
data1 <-  StationAllTable(stationList$Name[i], Sys.Date()-1, Sys.Date()-1)
new_df <- rbind(new_df, data1)
}
new_df <- data.frame()
for(i in 1 : 3){ #nrow(stationList)){
data1 <-  StationAllTable(stationList$Name[i], Sys.Date()-3, Sys.Date()-3)
new_df <- rbind(new_df, data1)
}
Sys.Date()-3
day <- Sys.Date()-3
new_df <- data.frame()
day <- Sys.Date()-3
for(i in 1 : 3){ #nrow(stationList)){
data1 <-  StationAllTable(stationList$Name[i], day, day)
new_df <- rbind(new_df, data1)
}
day <- day %>% as.character()
for(i in 1 : 3){ #nrow(stationList)){
data1 <-  StationAllTable(stationList$Name[i], day, day)
new_df <- rbind(new_df, data1)
}
for(i in 1:3){ #nrow(stationList)){
data1 <-  StationAllTable(stationList$Name[i], "2018-01-31", "2018-01-31")
new_df <- rbind(new_df, data1)
}
for(i in 1:3){ #nrow(stationList)){
data1 <-  StationAllTable(stationList$Name[i], "2018-01-31", "2018-01-31")
new_df <- rbind(new_df, data1)
}
for(i in 1:3){ #nrow(stationList)){
data1 <- StationAllTable(as.vector(stationList$Name[i]), "2018-01-31", "2018-01-31")
new_df <- rbind(new_df, data1)
}
View(new_df)
new_df <- data.frame()
day <- Sys.Date()-3
day <- day %>% as.character()
for(i in 1: nrow(stationList)){
data1 <- StationAllTable(as.vector(stationList$Name[i]), "2018-01-31", "2018-01-31")
new_df <- rbind(new_df, data1)
}
View(new_df)
stationList <- read.csv("https://docs.google.com/spreadsheets/d/e/2PACX-1vRPbYgyxZkrAj5Xd_Jy2m0lBzSrfOLUOqvX2OC3RzyT6mUu3KB73SJBq9UoNELTn2L_Myd3gQptCeyH/pub?gid=179807401&single=true&output=csv")
View(stationList)
stationList <- read.csv("https://docs.google.com/spreadsheets/d/e/2PACX-1vRPbYgyxZkrAj5Xd_Jy2m0lBzSrfOLUOqvX2OC3RzyT6mUu3KB73SJBq9UoNELTn2L_Myd3gQptCeyH/pub?gid=179807401&single=true&output=csv",
encoding = "UTF-8-BOM")
View(stationList)
stationList <- read.csv("https://docs.google.com/spreadsheets/d/e/2PACX-1vRPbYgyxZkrAj5Xd_Jy2m0lBzSrfOLUOqvX2OC3RzyT6mUu3KB73SJBq9UoNELTn2L_Myd3gQptCeyH/pub?gid=179807401&single=true&output=csv",
encoding = "UTF-8")
View(stationList)
stationList <- read.csv("https://docs.google.com/spreadsheets/d/e/2PACX-1vRPbYgyxZkrAj5Xd_Jy2m0lBzSrfOLUOqvX2OC3RzyT6mUu3KB73SJBq9UoNELTn2L_Myd3gQptCeyH/pub?gid=179807401&single=true&output=csv",
encoding = "UTF-8-BOM")
View(stationList)
stationList <- read.csv("https://docs.google.com/spreadsheets/d/e/2PACX-1vRPbYgyxZkrAj5Xd_Jy2m0lBzSrfOLUOqvX2OC3RzyT6mUu3KB73SJBq9UoNELTn2L_Myd3gQptCeyH/pub?gid=179807401&single=true&output=csv",
encoding = "BIG-5")
View(stationList)
stationList <- read.csv("https://docs.google.com/spreadsheets/d/e/2PACX-1vRPbYgyxZkrAj5Xd_Jy2m0lBzSrfOLUOqvX2OC3RzyT6mUu3KB73SJBq9UoNELTn2L_Myd3gQptCeyH/pub?gid=179807401&single=true&output=csv")
View(stationList)
stationList <- read.csv("https://docs.google.com/spreadsheets/d/e/2PACX-1vRPbYgyxZkrAj5Xd_Jy2m0lBzSrfOLUOqvX2OC3RzyT6mUu3KB73SJBq9UoNELTn2L_Myd3gQptCeyH/pub?gid=179807401&single=true&output=csv",
fileEncoding = "UTF-8-BOM")
View(stationList)
stationList <- read.csv("https://docs.google.com/spreadsheets/d/e/2PACX-1vRPbYgyxZkrAj5Xd_Jy2m0lBzSrfOLUOqvX2OC3RzyT6mUu3KB73SJBq9UoNELTn2L_Myd3gQptCeyH/pub?gid=179807401&single=true&output=csv",
fileEncoding = "UTF-16-BOM")
stationList <- read.csv("https://docs.google.com/spreadsheets/d/e/2PACX-1vRPbYgyxZkrAj5Xd_Jy2m0lBzSrfOLUOqvX2OC3RzyT6mUu3KB73SJBq9UoNELTn2L_Myd3gQptCeyH/pub?gid=179807401&single=true&output=csv",
encoding = "UTF-16-BOM")
View(stationList)
stationList <- read.csv("data/new_Station_List.csv",
encoding = "UTF-16-BOM")
View(stationList)
stationList <- read.csv("data/new_Station_List.csv", fileEncoding = "UTF-16-BOM")
stationList <- read.csv("data/new_Station_List.csv", fileEncoding = "UTF-8-BOM")
stationList <- read.csv("data/new_Station_List.csv", fileEncoding = "UTF-8")
stationList <- read.csv("data/new_Station_List.csv", fileEncoding = "UTF-16-BOM")
stationList <- read.csv("data/new_Station_List.csv")
View(stationList)
library(readxl)
stationList <- read_xlsx("data/new_Station_List.xlsx", sheet = "new_Station_List")
View(stationList)
stationList <- read.table("https://docs.google.com/spreadsheets/d/e/2PACX-1vRPbYgyxZkrAj5Xd_Jy2m0lBzSrfOLUOqvX2OC3RzyT6mUu3KB73SJBq9UoNELTn2L_Myd3gQptCeyH/pub?gid=179807401&single=true&output=csv",
encoding = "UTF-16-BOM")
View(stationList)
stationList <- read.table("https://docs.google.com/spreadsheets/d/e/2PACX-1vRPbYgyxZkrAj5Xd_Jy2m0lBzSrfOLUOqvX2OC3RzyT6mUu3KB73SJBq9UoNELTn2L_Myd3gQptCeyH/pub?gid=179807401&single=true&output=csv")
View(stationList)
library(data.table)
stationList <- fread("https://docs.google.com/spreadsheets/d/e/2PACX-1vRPbYgyxZkrAj5Xd_Jy2m0lBzSrfOLUOqvX2OC3RzyT6mUu3KB73SJBq9UoNELTn2L_Myd3gQptCeyH/pub?gid=179807401&single=true&output=csv")
View(stationList)
stationList <- fread('data/new_Station_List.csv')
View(stationList)
fread
View(stationList)
new_df <- data.frame()
day <- Sys.Date()-3
day <- day %>% as.character()
for(i in 1: nrow(stationList)){
data1 <- StationAllTable_engName(as.vector(stationList$engName[i]), "2019-01-31", "2019-01-31")
new_df <- rbind(new_df, data1)
}
library(magrittr)
new_df <- data.frame()
day <- Sys.Date()-3
day <- day %>% as.character()
for(i in 1: nrow(stationList)){
data1 <- StationAllTable_engName(as.vector(stationList$engName[i]), "2019-01-31", "2019-01-31")
new_df <- rbind(new_df, data1)
}
# Library Packages
library(magrittr)
library(httr)
library(rvest)
library(stringr)
library(reshape2)
library(knitr)
new_df <- data.frame()
day <- Sys.Date()-3
day <- day %>% as.character()
for(i in 1: nrow(stationList)){
data1 <- StationAllTable_engName(as.vector(stationList$engName[i]), "2019-01-31", "2019-01-31")
new_df <- rbind(new_df, data1)
}
View(new_df)
View(new_df)
stationList <- fread('data/stList')
stationList <- fread('data/stList.csv')
stationList <- read.csv('data/stList.csv')
library(readxl)
stationList <- read.csv('data/stList.csv')
View(stationList)
stationList <- read.table('data/stList.txt')
View(stationList)
stationList <- read_excel('data/new_Station_List.xlsx', sheet = "new_Station_List")
View(stationList)
data1 <- StationAllTable_engName(as.vector(stationList$engName[1]), "2019-01-31", "2019-01-31")
View(data1)
svePath <- paste("writeData/", as.vector(stationList$engName[1]), ".csv",  sep = "")
svePath
download_cwb_data(as.vector(stationList$engName[1]), "2019-01-31", "2019-01-31", svePath)
download_cwb_data <- function(stationName, startDate, EndDate, path){
StationAllTable(stationName, startDate, EndDate) %>% write.csv(., path)
}
download_cwb_data_eng <- function(stationName, startDate, EndDate, path){
StationAllTable_engName(stationName, startDate, EndDate) %>% write.csv(., path)
}
download_cwb_data_eng(as.vector(stationList$engName[1]), "2019-01-31", "2019-01-31", svePath)
View(stationList)
for(i in 1:nrow(stationList)){
svePath <- paste("writeData/", as.vector(stationList$engName[i]), ".csv",  sep = "")
download_cwb_data_eng(as.vector(stationList$engName[i]), "2019-01-31", "2019-01-31", svePath)
}
for(i in 343:nrow(stationList)){
svePath <- paste("writeData/", as.vector(stationList$engName[i]), ".csv",  sep = "")
download_cwb_data_eng(as.vector(stationList$engName[i]), "2019-01-31", "2019-01-31", svePath)
}
View(stationList)
svePath <- paste("writeData/", 'Qishan', ".csv",  sep = "")
svePath
download_cwb_data_eng("Qishan", "2019-01-31", "2019-01-31", svePath)
svePath <- paste("writeData/", 'Qiaotou', ".csv",  sep = "")
download_cwb_data_eng("Qiaotou", "2019-01-31", "2019-01-31", svePath)
svePath <- paste("writeData/", 'Dashe', ".csv",  sep = "")
download_cwb_data_eng("Dashe", "2019-01-31", "2019-01-31", svePath)
svePath <- paste("writeData/", 'Jinsha', ".csv",  sep = "")
download_cwb_data_eng("Jinsha", "2019-01-31", "2019-01-31", svePath)
for(i in 352:nrow(stationList)){
svePath <- paste("writeData/", as.vector(stationList$engName[i]), ".csv",  sep = "")
download_cwb_data_eng(as.vector(stationList$engName[i]), "2019-01-31", "2019-01-31", svePath)
}
for(i in 418:nrow(stationList)){
svePath <- paste("writeData/", as.vector(stationList$engName[i]), ".csv",  sep = "")
download_cwb_data_eng(as.vector(stationList$engName[i]), "2019-01-31", "2019-01-31", svePath)
}
Sys.Date()
source('downloadCWBData.R')
source('downloadCWBData.R')
svePath <- paste("writeData/", 'Jinsha', ".csv",  sep = "")
download_cwb_data_eng("Jinsha", "2019-01-31", "2019-01-31", svePath)
